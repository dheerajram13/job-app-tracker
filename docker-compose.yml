services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/jobtracker
      - REDIS_URL=redis://redis:6379/0
      - AUTH0_DOMAIN=dev-jfbkac6ro5a1weiq.us.auth0.com
      - AUTH0_API_AUDIENCE=https://api.jobapptracker.com
      - AUTH0_CLIENT_ID=fxVS92jJNcmc0eYqoUOLnT77E6MwWQmb
      - AUTH0_CLIENT_SECRET=dvlvN9SBywNcb87Micfxr1xW4uJJbxriXm2TvFEBvvL9DdmhX7frA2Kjnv15AZCp
      - ALLOWED_ORIGINS=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - transformer_cache:/root/.cache/huggingface

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - VITE_AUTH0_DOMAIN=dev-jfbkac6ro5a1weiq.us.auth0.com
      - VITE_AUTH0_CLIENT_ID=fxVS92jJNcmc0eYqoUOLnT77E6MwWQmb
      - VITE_AUTH0_AUDIENCE=https://api.jobapptracker.com
    networks:
      - app-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: jobtracker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  transformer_cache:  #